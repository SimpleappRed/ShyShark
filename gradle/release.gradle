/**
 * Use For Upload
 */
version = gradle.versionName

def siteUrl = 'https://github.com/sabujak-sabujak/ShyShark'      // Homepage URL of the library
def gitUrl = 'https://github.com/sabujak-sabujak/ShyShark.git'   // Git repository URL
group = "life.sabujak"                      // Maven Group ID for the artifact


install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'

                // Add your description here
                name 'ShyShark'
                description = 'ShyShark is Swipeable card stack view like Tinder.'
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'sabujak-sabujak'
                        name 'sabujak'
                        email 'dev.sabujak@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

afterEvaluate {
    javadoc.classpath += project.android.libraryVariants.toList().first().javaCompile.classpath
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}


task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir

}
artifacts {
    archives javadocJar
    archives sourcesJar
}

if (project.rootProject.file('local.properties').isFile()) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    bintray {
        user = properties.getProperty("bintray.user", '')
        key = properties.getProperty("bintray.apikey", '')
        publish = true
        configurations = ['archives']
        pkg {
            repo = "maven"
            // it is the name that appears in bintray when logged
            name = "ShyShark"
            websiteUrl = siteUrl
            vcsUrl = gitUrl
            licenses = ["Apache-2.0"]
            publish = true
        }
    }
}

